View(r)
as.matrix(r)
eucl_dist <- function(a,b){
return(sqrt(((a[,1] - b[,1])^2) + ((a[,2 - b[,2]])^2) + ((a[,3] - b[,3])^2)))
}
test <- apply(r, 1, eucl_dist)
return(sqrt(((a[,1] - b[1])^2) + ((a[2] - b[2]])^2) + ((-a[3] - b[3])^2)))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
return(sqrt(((a[,1] - b[1])^2) + ((a[2] - b[2]])^2) + ((-a[3] - b[3])^2)))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
return(sqrt(((a[,1] - b[1])^2) + ((a[2] - b[2])^2) + ((-a[3] - b[3])^2)))
}
test <- apply(r, 1, eucl_dist)
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
return(sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((-a[3] - b[3])^2)))
}
test <- apply(r, 1, eucl_dist)
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
return(sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((-a[3] - b[3])^2)))
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
test
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_color_brewer(palette='Accent') +
guides(color=guide_legend(title="Cluster"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
#scale_color_brewer(palette='Accent') +
guides(color=guide_legend(title="Cluster"))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
return(sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) - ((a[3] - b[3])^2)))
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
#scale_color_brewer(palette='Accent') +
guides(color=guide_legend(title="Cluster"))
test
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
return(sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((a[3] - b[3])^2)))
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
#scale_color_brewer(palette='Accent') +
guides(color=guide_legend(title="Cluster"))
brewer.pal()
brewer.pal
?RColorBrewer
display.brewer.all
display.brewer.all()
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_color_brewer(palette='Spectral') +
guides(color=guide_legend(title="Cluster"))
guides(color=guide_legend(title="Cluster"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=as.factor(test))) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_color_brewer(palette='Spectral') +
guides(color=guide_legend(title="Cluster"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=as.factor(test))) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_color_brewer(palette='Spectral') +
guides(color=FALSE)
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_color_brewer(palette='Spectral') +
guides(color=guide_legend(title="Cluster"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
#scale_color_brewer(palette='Spectral') +
guides(color=guide_legend(title="Cluster"))
display.brewer.all()
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) +
guides(color=guide_legend(title="Cluster"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) +
guides(color=guide_legend(title="Cluster"))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
return(sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((-a[3] - b[3])^2)))
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) +
guides(color=guide_legend(title="Cluster"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) #+
#guides(color=guide_legend(title="Cluster"))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
dist <- sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((a[3] - b[3])^2))
if(which.max(a)){
dist < dist*-1
}
return(dist)
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) #+
#guides(color=guide_legend(title="Cluster"))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
dist <- sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((a[3] - b[3])^2))
print(a)
if(which.max(a)){
dist < dist*-1
}
return(dist)
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
dist <- sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((a[3] - b[3])^2))
if(which.max(a)==3){
dist < dist*-1
}
return(dist)
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) #+
#guides(color=guide_legend(title="Cluster"))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
dist <- sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((a[3] - b[3])^2))
if(which.max(a)==3){
dist < dist*-1
}
return(dist)
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
labels <- apply(r, 1, which.max)
eucl_dist <- function(a,b){
dist <- sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((a[3] - b[3])^2))
if(which.max(a)==3){
dist <- dist*-1
}
return(dist)
}
test <- apply(r, 1, eucl_dist, b=c(0,1,0))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) #+
#guides(color=guide_legend(title="Cluster"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) #+
guides(color=guide_legend(title="Clusters", breaks=c(1,2,3)))
?guides
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) #+
guides(color=guide_colourbar(title="Clusters", breaks=c(1,2,3)))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) +
guides(color=guide_colourbar(title="Clusters", breaks=c(1,2,3)))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) +
guides(color=guide_legend(title="Clusters", breaks=c(1,2,3)))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=test)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) +
guides(color=guide_colourbar(title="Clusters", breaks=c(1,2,3)))
eucl_dist <- function(a,b){
dist <- sqrt(((a[1] - b[1])^2) + ((a[2] - b[2])^2) + ((a[3] - b[3])^2))
if(which.max(a)==3){
dist <- dist*-1
}
return(dist)
}
EM_labels <- apply(r, 1, eucl_dist, b=c(0,1,0))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1) +
guides(color=guide_colourbar(title="Clusters", breaks=c(1,2,3)))
?scale_colour_gradient2
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='green', name='Cluster',
breaks=-1:1,values=c(1,2,3)) +
guides(color=guide_colourbar(title="Clusters"))
?theme
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1) +
guides(color=guide_colourbar(title="Clusters")) +
theme(legend.text=c(1,2,3))
?element_text
(aic <- -2*log_lik + 2*(6+6+3+3))
inner <- log(new_phis) + log(new_pdfs)
log_lik <- sum(dummy(labels)*inner)
(aic <- -2*log_lik + 2*(6+6+3+3))
inner <- log(new_phis) + log(new_pdfs)
hard_labels <- apply(r, 1, which.max)
log_lik <- sum(dummy(hard_labels)*inner)
(aic <- -2*log_lik + 2*(6+6+3+3))
inner <- log(new_phis) + log(new_pdfs)
hard_labels <- apply(r, 1, which.max)
log_lik <- sum(inner)
(aic <- -2*log_lik + 2*(6+6+3+3))  # 6 mus, 6 variances, 3 phis, and 3 clusters are all estimated.
inner <- log(new_phis) + log(new_pdfs)
hard_labels <- apply(r, 1, which.max)
log_lik <- sum(dummy(hard_labels)*inner)
(aic <- -2*log_lik + 2*(6+6+3+3))  # 6 mus, 6 variances, 3 phis, and 3 clusters are all estimated.
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1) +
guides(color=guide_colourbar(title="Clusters", label.theme=element_text())) +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1) +
guides(color=guide_colourbar(title="Clusters", label.theme=element_text())) +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1) #+
#guides(color=guide_colourbar(title="Clusters", label.theme=element_text())) +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(1,2,3) +
guides(color=guide_colourbar(title="Clusters", label.theme=element_text())) +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(1,2,3) +
guides(color=guide_colourbar(title="Clusters")) +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(1,2,3) +
guides(color=guide_colourbar(title="Clusters") +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(1,2,3)) +
guides(color=guide_colourbar(title="Clusters") +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(1,2,3)) +
guides(color=guide_colourbar(title="Clusters")) +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(1,2,3)) +
guides(color=guide_colourbar(title="Clusters")) +
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(1,2,3)) +
guides(color=guide_colourbar(title="Clusters"))
ggplot(data2, aes(x=V1, y=V2)) +
geom_point(aes(colour=EM_labels)) +
geom_density2d(inherit.aes = FALSE, aes(x=Z[,1], y=Z[,2])) +
ggtitle("Clusters and Density Plot for Gaussian Mixture.") +
scale_colour_gradient2(mid='purple', name='Cluster',
breaks=-1:1, labels=c(3,2,1)) +
guides(color=guide_colourbar(title="Clusters"))
EM_mclust$parameters$Z
EM_mclust$parameters$z
EM_mclust$parameters
EM_mclust$Z
EM_mclust$z
EM_mclust$r
EM_mclust$parameters$mean
factoextra::fviz_mclust(UN_mclust) + theme_bw()
factoextra::fviz_mclust(UN_mclust) + theme_economist()
factoextra::fviz_mclust(UN_mclust) + theme_wsjt()
library(tidyverse)
library(cluster)
library(mvtnorm)
library(pracma)
library(dummies)
library(RColorBrewer)
library(mclust)
library(ggthemes)
library(factoextra)
factoextra::fviz_mclust(UN_mclust) + theme_economist()
fviz_mclust(UN_mclust) + theme_excel()
fviz_mclust(UN_mclust) + theme_solaris()
fviz_mclust(UN_mclust) + theme_minimal()
library(tidyverse)
library(broom)
library(Lahman)
p <- ggplot(dat, aes(x=Survived, y=Fare, colour=Sex)) +
geom_jitter() +
ggtitle("Titanic Survival: Survival ~ Fare and Sex") +
theme_bw()
dat <- read_csv("titanic-train.csv")
p <- ggplot(dat, aes(x=Survived, y=Fare, colour=Sex)) +
geom_jitter() +
ggtitle("Titanic Survival: Survival ~ Fare and Sex") +
theme_bw()
p
ggplot(dat, aes(x=Fare, y=Survived, colour=Sex)) +
geom_point() +
geom_smooth(method='lm',formula=y~x) +
ggtitle("Linear Model Results: Survived ~ Fare + Sex")
model2b <- lm(Survived ~ Fare + Sex, data=dat)
summary(model2b)
logistic <- glm(Survived ~ Fare + Sex, family = binomial(link='logit'), data=dat)
probit <- glm(Survived ~ Fare + Sex, family = binomial(link='probit'), data=dat)
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(family = binomial(link='logit'))) +
ggtitle("Linear Model Results: Survived ~ Fare + Sex")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(family = binomial(link='probit'))) +
ggtitle("Linear Model Results: Survived ~ Fare")
logistic_male <- glm(Survived ~ (Fare + Sex)^2, family = binomial(link='logit'), data=males)
females <- filter(dat, Sex=='female')
males <- filter(dat, Sex=='male')
logistic_male <- glm(Survived ~ (Fare + Sex)^2, family = binomial(link='logit'), data=males)
males
logistic_male <- glm(Survived ~ Fare, family = binomial(link='logit'), data=males)
logistic_female <- glm(Survived ~ Fare, family = binomial(link='logit'), data=females)
ggplot(males, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(family = binomial(link='logit'))) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(females, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(family = binomial(link='logit'))) +
ggtitle("Linear Model Results: Survived ~ Fare")
interaction <- glm(Survived~(Fare + Sex)^2, link='logit', data=dat)
interaction <- glm(Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat)
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(Survived~(Fare + Sex)^2, family = binomial(link='logit'))) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(formula=Survived~(Fare + Sex)^2, family = binomial(link='logit'))) +
ggtitle("Linear Model Results: Survived ~ Fare")
Églm
?glm
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'))) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat)) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat)) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat), inherit.aes = FALSE) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(aes(x = Fare, y=Survived), method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat), inherit.aes = FALSE) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth( method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat), inherit.aes = FALSE) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(inherit.aes = FALSE, aes(x = dat$Fare, y=dat$Survived), method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat)) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth( method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat), inherit.aes = FALSE) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(x=dat$Fare, y=dat$Survived method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat), inherit.aes = FALSE) +
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(x=dat$Fare, y=dat$Survived, method=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'), data=dat), inherit.aes = FALSE) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smoothmethod=glm, method.args=list(formula = Survived~(Fare + Sex)^2, family = binomial(link='logit'))) +
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(formula = dat$Survived~(dat$Fare + dat$Sex)^2, family = binomial(link='logit'), data=dat)) +
ggtitle("Linear Model Results: Survived ~ Fare")
ggplot(dat, aes(x=Fare, y=Survived)) +
facet_wrap(~Sex) +
geom_point() +
geom_smooth(method=glm, method.args=list(formula = dat$Survived~(dat$Fare + dat$Sex)^2, family = binomial(link='logit'))) +
ggtitle("Linear Model Results: Survived ~ Fare")
View(interaction)
View(k_mediods)
runApp('src/visualization/shinyapp')
shiny::runApp('src/visualization/shinyapp')
